{"version":3,"file":"static/js/990.6ce8e602.chunk.js","mappings":"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","sources":["common/scroll_to_top_init/index.jsx","webpack://woodhead-event-site/./src/pages/space/space_header/style.module.css?a634","webpack://woodhead-event-site/./src/pages/space/create/style.module.css?e76b","pages/space/create/index.jsx","webpack://woodhead-event-site/./src/pages/space/space_header/tabs/style.module.css?f606","pages/space/space_header/tabs/index.jsx","pages/space/space_header/index.jsx","webpack://woodhead-event-site/./src/pages/space/board_header/style.module.css?99d9","webpack://woodhead-event-site/./src/pages/space/board_header/tabs/style.module.css?0033","pages/space/board_header/tabs/index.jsx","pages/space/board_header/index.jsx","pages/space/dnd_board/ClientOnlyPortal.js","webpack://woodhead-event-site/./src/pages/space/dnd_board/task_item/style.module.css?bcff","pages/space/dnd_board/task_item/index.jsx","webpack://woodhead-event-site/./src/pages/space/dnd_board/section_item/style.module.css?9807","webpack://woodhead-event-site/./src/pages/space/dnd_board/create_task/style.module.css?be8f","pages/space/dnd_board/create_task/index.jsx","pages/space/dnd_board/section_item/index.jsx","webpack://woodhead-event-site/./src/pages/space/dnd_board/style.module.css?07e9","pages/space/dnd_board/index.jsx","pages/space/dnd_board/FakeData.js","pages/space/index.jsx"],"sourcesContent":["import { useEffect } from \"react\";\n\nexport const ScrollToTop = () => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"spaceWrapper\":\"style_spaceWrapper__JUXKM\",\"spaceContainer\":\"style_spaceContainer__UCtZf\",\"leftInfo\":\"style_leftInfo__yJb4Z\",\"rightInfo\":\"style_rightInfo__kcolb\",\"profileLogo\":\"style_profileLogo__77pYr\",\"logoutIcon\":\"style_logoutIcon__2yc7V\"};","// extracted by mini-css-extract-plugin\nexport default {\"createSpace\":\"style_createSpace__SUT22\",\"btnWrapper\":\"style_btnWrapper__ddQ2j\",\"craeteBtn\":\"style_craeteBtn__nj6js\",\"cancelBtn\":\"style_cancelBtn__1Z-xO\"};","import { useRef, useState } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { BsPlus } from \"react-icons/bs\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { RxCross2 } from \"react-icons/rx\";\n\nimport styles from \"./style.module.css\";\nimport \"../../../common/ant_form/style.override.css\";\n\nexport const CreateSpace = ({\n  onClose,\n  onFinish,\n  isLoading,\n  onFinishFailed,\n  className,\n  placeholder,\n}) => {\n  const uniqueId = uuidv4();\n  let formRef = useRef(null);\n\n  return (\n    <div className={`${styles.createSpace} ${className}`}>\n      <Form\n        name=\"basic\"\n        id={`sui-form-${uniqueId}`}\n        ref={formRef}\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"on\"\n        className={`formValidation`}\n      >\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              type: \"text\",\n            },\n          ]}\n        >\n          <Input placeholder={placeholder} />\n        </Form.Item>\n\n        <Form.Item>\n          <div className={styles.btnWrapper}>\n            <Button\n              type=\"primary\"\n              loading={isLoading}\n              htmlType=\"submit\"\n              className={styles.craeteBtn}\n            >\n              {!isLoading && <>Create</>}\n            </Button>\n            <div className={styles.cancelBtn} onClick={() => onClose(false)}>\n              <RxCross2 />\n            </div>\n          </div>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabWrapper\":\"style_tabWrapper__q7fFo\",\"tabContainer\":\"style_tabContainer__weahV\",\"isActive\":\"style_isActive__9gHZz\",\"createSpace\":\"style_createSpace__rrwOL\",\"btnWrapper\":\"style_btnWrapper__cGZLr\",\"craeteBtn\":\"style_craeteBtn__heVRA\",\"cancelBtn\":\"style_cancelBtn__P4kPF\",\"createIcon\":\"style_createIcon__fAHtj\"};","import { useState } from \"react\";\nimport { BsPlus } from \"react-icons/bs\";\n\nimport { CreateSpace } from \"../../create\";\n\nimport styles from \"./style.module.css\";\n\nconst spaceTabsData = [\n  {\n    name: \"Noveau workspace\",\n    isActive: true,\n  },\n  {\n    name: \"kissflow workspace\",\n    isActive: false,\n  },\n];\n\nexport const Tabs = () => {\n  const [isCreateSpace, setIsCreateSpace] = useState(false);\n\n  const onFinish = (values) => {};\n  const onFinishFailed = (errorInfo) => {};\n\n  return (\n    <div className={styles.tabWrapper}>\n      {spaceTabsData.map((tab) => {\n        return (\n          <div\n            className={`${styles.tabContainer} ${\n              tab.isActive && styles.isActive\n            } `}\n            // onClick={() => tabOnClick(tab)}\n          >\n            {tab.name}\n          </div>\n        );\n      })}\n      {isCreateSpace ? (\n        <CreateSpace\n          placeholder=\"Enter space name\"\n          onClose={setIsCreateSpace}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        />\n      ) : (\n        <div\n          className={styles.createIcon}\n          onClick={() => setIsCreateSpace(true)}\n        >\n          <BsPlus />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { IoIosLogOut } from \"react-icons/io\";\n\nimport logo from \"../../../images/logo/logo.png\";\n\nimport styles from \"./style.module.css\";\nimport { Tabs } from \"./tabs\";\n\nexport const SpaceHeader = () => {\n  const onLogout = () => {  };\n\n  return (\n    <div className={styles.spaceWrapper}>\n      <div className={styles.spaceContainer}>\n        <div className={styles.leftInfo}>\n          <img src={logo} alt=\"skyview logo\" />\n          <h1>SkyView</h1>\n        </div>\n\n        <Tabs />\n\n        <div className={styles.rightInfo}>\n          <div className={styles.profileLogo}>K</div>\n          <IoIosLogOut className={styles.logoutIcon} onClick={onLogout} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"boardWrapper\":\"style_boardWrapper__ZqaSx\",\"spaceNameContainer\":\"style_spaceNameContainer__anuPX\",\"leftInfo\":\"style_leftInfo__6GdeJ\",\"rightInfo\":\"style_rightInfo__YtRac\",\"spaceTitle\":\"style_spaceTitle__kPXx1\"};","// extracted by mini-css-extract-plugin\nexport default {\"tabWrapper\":\"style_tabWrapper__CEFI5\",\"tabContainer\":\"style_tabContainer__1CTO+\",\"hoverLine\":\"style_hoverLine__DjTXa\",\"isActive\":\"style_isActive__TsMWy\",\"createIcon\":\"style_createIcon__QperT\",\"createBoard\":\"style_createBoard__5R8Wz\"};","import { useState } from \"react\";\nimport { BsPlus } from \"react-icons/bs\";\n\nimport { CreateSpace as CreateBoard } from \"../../create\";\n\nimport styles from \"./style.module.css\";\n\nconst boardTabs = [\n  {\n    name: \"Daily workflow\",\n    isActive: true,\n  },\n  {\n    name: \"woodhead events\",\n    isActive: false,\n  },\n  {\n    name: \"drengineers\",\n    isActive: false,\n  },\n];\n\nexport const BoardTabs = () => {\n  const [isCreateBoard, setIsCreateBoard] = useState(false);\n\n  const onFinish = (values) => {};\n  const onFinishFailed = (errorInfo) => {};\n\n  return (\n    <div className={styles.tabWrapper}>\n      {boardTabs.map((tab) => {\n        return (\n          <div\n            className={`${styles.tabContainer} ${\n              tab.isActive && styles.isActive\n            } `}\n          >\n            {tab.name}\n            <div className={styles.hoverLine} />\n          </div>\n        );\n      })}\n      {isCreateBoard ? (\n        <CreateBoard\n          placeholder=\"Enter board name\"\n          onClose={setIsCreateBoard}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          className={styles.createBoard}\n        />\n      ) : (\n        <div\n          className={styles.createIcon}\n          onClick={() => setIsCreateBoard(true)}\n        >\n          <BsPlus />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { SlArrowDown } from \"react-icons/sl\";\n\nimport styles from \"./style.module.css\";\nimport { BoardTabs } from \"./tabs\";\n\nexport const BoardHeader = () => {\n  return (\n    <div className={styles.boardWrapper}>\n      <div className={styles.spaceNameContainer}>\n        <div className={styles.leftInfo}>\n          <img\n            src=\"https://imgs.search.brave.com/DP4MCAmTmYJlDNIgaCabvkoPXphN1uluAdN0nirZHSI/rs:fit:500:0:0:0/g:ce/aHR0cHM6Ly9tZWRp/YS5ncmFwaGFzc2V0/cy5jb20vVzVRZlR6/bktSNW1IRkdDM0tq/b1k.jpeg\"\n            alt=\"logo\"\n          />\n          <div className={styles.spaceTitle}>Noveau Workspace</div>\n        </div>\n        <div className={styles.rightInfo}>\n          <SlArrowDown />\n        </div>\n      </div>\n\n      <BoardTabs />\n    </div>\n  );\n};\n","import { useRef, useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nexport default function ClientOnlyPortal({ children, selector }) {\n  const ref = useRef();\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    ref.current = document.querySelector(selector);\n    ref?.current && setMounted(true);\n  }, [selector]);\n\n  return mounted ? createPortal(children, ref.current) : null;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"taskText\":\"style_taskText__8u9s+\",\"dateText\":\"style_dateText__zwvve\",\"card\":\"style_card__v58Ch\"};","//import React, { useState, useEffect, useRef } from \"react\";\nimport { useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\n\nimport styles from \"./style.module.css\";\n\n// Task\nexport const FieldItem = (props) => {\n  const { id, item, dragOverlay } = props;\n  const {\n    setNodeRef,\n    //setActivatorNodeRef,\n    listeners,\n    isDragging,\n    //isSorting,\n    //over,\n    //overIndex,\n    transform,\n    transition,\n    attributes,\n  } = useSortable({\n    id: id,\n    disabled: props.disabled,\n    data: {\n      type: \"FIELD\",\n    },\n  });\n\n  const style = {\n    transform: CSS.Translate.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n    boxShadow: dragOverlay\n      ? \"0 0 0 calc(1px / 1) rgba(63, 63, 68, 0.05), -1px 0 15px 0 rgba(34, 33, 81, 0.01), 0px 15px 15px 0 rgba(34, 33, 81, 0.25)\"\n      : \"\",\n    border: dragOverlay\n      ? \"1px solid rgba(64, 150, 255, 1)\"\n      : \"1px solid transparent\", // 1px solid rgba(64, 150, 255, 1)\n    cursor: dragOverlay ? \"grabbing\" : \"grab\",\n    //transform: dragOverlay ? 'rotate(0deg) scale(1.02)' : 'rotate(0deg) scale(1.0)'\n    touchAction:\n      window.PointerEvent ||\n      \"ontouchstart\" in window ||\n      navigator.MaxTouchPoints > 0 ||\n      navigator.msMaxTouchPoints > 0\n        ? \"manipulation\"\n        : \"none\",\n  };\n  return (\n    <div\n      ref={props.disabled ? null : setNodeRef}\n      className={styles.card}\n      style={style}\n      {...attributes}\n      {...listeners}\n    >\n      <div className={styles.taskText}>{item.name}</div>\n      {/* <div className={styles.dateText}>Aug 18</div> */}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionContainer\":\"style_sectionContainer__c8Gii\",\"header\":\"style_header__7xfHa\",\"sectionTitle\":\"style_sectionTitle__h59Rc\",\"dragIcon\":\"style_dragIcon__B9MOh\",\"badge\":\"style_badge__PncZ9\",\"fieldListContainer\":\"style_fieldListContainer__nb9U-\",\"addButton\":\"style_addButton__RgfhZ\",\"icon\":\"style_icon__PzMxU\"};","// extracted by mini-css-extract-plugin\nexport default {\"createTaskWrapper\":\"style_createTaskWrapper__jOmT3\",\"btnWrapper\":\"style_btnWrapper__NNsEV\",\"cancelBtn\":\"style_cancelBtn__aZ3VF\"};","import { useRef } from \"react\";\nimport { Form, Input } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport \"../../../../common/ant_form/style.override.css\";\nimport styles from \"./style.module.css\";\n\nexport const CreateTask = ({ setIsCreateTask }) => {\n  const uniqueId = uuidv4();\n  let formRef = useRef(null);\n\n  const onFinish = (values) => {};\n  const onFinishFailed = (errorInfo) => {};\n\n  return (\n    <div className={styles.createTaskWrapper}>\n      <Form\n        name=\"basic\"\n        id={`sui-form-${uniqueId}`}\n        ref={formRef}\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"on\"\n        className=\"formValidation\"\n      >\n        <Form.Item\n          name=\"message\"\n          rules={[\n            {\n              required: true,\n              message: \"Type your task !\",\n            },\n          ]}\n        >\n          <Input.TextArea placeholder=\"What needs to be done?\" name=\"message\" />\n        </Form.Item>\n\n        <Form.Item>\n          <div className={styles.btnWrapper}>\n            <button htmlType=\"submit\">Create</button>\n            <button\n              className={styles.cancelBtn}\n              onClick={() => setIsCreateTask(false)}\n            >\n              Cancel\n            </button>\n          </div>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","//import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  useSortable,\n  SortableContext,\n  verticalListSortingStrategy,\n} from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { RxDragHandleDots2 } from \"react-icons/rx\";\nimport { RiApps2AddLine } from \"react-icons/ri\";\n\nimport { FieldItem } from \"../task_item\";\n\nimport styles from \"./style.module.css\";\nimport { useState } from \"react\";\nimport { CreateTask } from \"../create_task\";\n\n// Column\nexport const SectionItem = (props) => {\n  const { id, allDataIds, name, taskList, isSortingContainer, dragOverlay } =\n    props;\n  const {\n    //active,\n    attributes,\n    isDragging,\n    listeners,\n    //over,\n    setNodeRef,\n    setActivatorNodeRef,\n    transition,\n    transform,\n  } = useSortable({\n    id: id,\n    taskList: {\n      type: \"SECTION\",\n    },\n  });\n\n  const [isCreateTask, setIsCreateTask] = useState(false);\n\n  const getColumnHeight = () => {\n    let h = document.getElementsByClassName(\"kanbanColumn\")[0].clientHeight;\n    return h;\n  };\n\n  const style = {\n    transform: CSS.Translate.toString(transform),\n    height: dragOverlay ? `${getColumnHeight() + \"px\"}` : null,\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n    boxShadow: dragOverlay\n      ? \"0 0 0 calc(1px / 1) rgba(63, 63, 68, 0.05), -1px 0 15px 0 rgba(34, 33, 81, 0.01), 0px 15px 15px 0 rgba(34, 33, 81, 0.25)\"\n      : \"\",\n    border: dragOverlay\n      ? \"1px solid rgba(64, 150, 255, 1)\"\n      : \"1px solid transparent\", // 1px solid rgba(64, 150, 255, 1)\n    //cursor: dragOverlay ? \"grabbing\" : \"grab\",\n    //transform: dragOverlay ? 'rotate(0deg) scale(1.02)' : 'rotate(0deg) scale(1.0)'\n    touchAction:\n      \"ontouchstart\" in window ||\n      navigator.MaxTouchPoints > 0 ||\n      navigator.msMaxTouchPoints > 0\n        ? \"manipulation\"\n        : \"none\",\n  };\n\n  const onCreateTask = () => {\n    setIsCreateTask(true);\n  };\n\n  return (\n    <div\n      ref={setNodeRef}\n      className={styles.sectionContainer}\n      style={style}\n      //{...attributes}\n      //{...listeners}\n    >\n      <div\n        ref={setActivatorNodeRef}\n        {...attributes}\n        {...listeners}\n        className={styles.header}\n        style={{\n          cursor: dragOverlay ? \"grabbing\" : \"grab\",\n        }}\n      >\n        <RxDragHandleDots2 className={styles.dragIcon} />\n        <span className={styles.sectionTitle}>{name}</span>\n        <span className={styles.badge}>\n          {allDataIds.length ? allDataIds.length : 0}\n        </span>\n      </div>\n      <div className={styles.fieldListContainer}>\n        <SortableContext\n          items={allDataIds}\n          strategy={verticalListSortingStrategy} // verticalListSortingStrategy rectSortingStrategy\n        >\n          {allDataIds.map((item, _index) => {\n            return (\n              <FieldItem\n                id={item}\n                key={item}\n                item={taskList.filter((d) => \"task-\" + d.id === item)[0]}\n                disabled={isSortingContainer}\n              />\n            );\n          })}\n        </SortableContext>\n      </div>\n      {isCreateTask ? (\n        <CreateTask setIsCreateTask={setIsCreateTask} />\n      ) : (\n        <div className={styles.addButton} onClick={() => onCreateTask()}>\n          <RiApps2AddLine className={styles.icon} />\n          <span> Add task</span>\n        </div>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"kanban\":\"style_kanban__sIf1U\",\"kanbanContainer\":\"style_kanbanContainer__lp3pf\",\"addSection\":\"style_addSection__vcAXe\",\"createSection\":\"style_createSection__SXvRv\"};","import React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport {\n  closestCenter,\n  pointerWithin,\n  rectIntersection,\n  DndContext,\n  DragOverlay,\n  getFirstCollision,\n  MouseSensor,\n  TouchSensor,\n  KeyboardSensor,\n  useSensors,\n  useSensor,\n  MeasuringStrategy,\n} from \"@dnd-kit/core\";\nimport {\n  SortableContext,\n  arrayMove,\n  horizontalListSortingStrategy,\n} from \"@dnd-kit/sortable\";\nimport update from \"immutability-helper\";\n\nimport ClientOnlyPortal from \"./ClientOnlyPortal\";\nimport { SectionItem } from \"./section_item\";\nimport { FieldItem } from \"./task_item\";\n\nimport styles from \"./style.module.css\";\nimport { CreateSpace } from \"../create\";\n\nexport const DndBoard = ({ tasks, columns }) => {\n  const [isCreateSection, setIsCreateSection] = useState(false);\n\n  const [taskList, setTaskList] = useState(null);\n  const [allDataIds, setAllDataIds] = useState({}); // columnId: [taskIds]\n  const [columnIds, setColumnIds] = useState([]);\n\n  const [activeId, setActiveId] = useState(null);\n  const lastOverId = useRef(null);\n  const recentlyMovedToNewContainer = useRef(false);\n\n  const isSortingContainer = activeId ? columnIds.includes(activeId) : false;\n\n  useEffect(() => {\n    if (tasks) {\n      setTaskList(tasks);\n      let cols = {};\n      columns.sort((a, b) => a.order - b.order);\n      columns.forEach((item) => {\n        cols[\"column-\" + item.id] = [];\n      });\n      tasks.forEach((item) => {\n        if (!(\"column-\" + item.col_id in cols)) {\n          cols[\"column-\" + item.col_id] = [];\n        }\n        cols[\"column-\" + item.col_id].push(\"task-\" + item.id);\n      });\n      setAllDataIds(cols);\n      setColumnIds(Object.keys(cols));\n    }\n  }, [tasks, columns]);\n\n  const onFinish = (values) => {};\n  const onFinishFailed = (errorInfo) => {};\n\n  const moveBetweenContainers = useCallback(\n    (activeContainer, overContainer, active, over, overId) => {\n      const activeItems = allDataIds[activeContainer];\n      const overItems = allDataIds[overContainer];\n      const overIndex = overItems.indexOf(overId);\n      const activeIndex = activeItems.indexOf(active.id);\n\n      let newIndex;\n\n      if (overId in allDataIds) {\n        newIndex = overItems.length + 1;\n      } else {\n        const isBelowOverItem =\n          over &&\n          active.rect?.current?.translated &&\n          active.rect?.current?.translated.top >=\n            over.rect?.top + over.rect?.height;\n\n        const modifier = isBelowOverItem ? 1 : 0;\n\n        newIndex = overIndex >= 0 ? overIndex + modifier : overItems.length + 1;\n      }\n      recentlyMovedToNewContainer.current = true;\n\n      setAllDataIds(\n        update(allDataIds, {\n          [activeContainer]: {\n            $splice: [[activeIndex, 1]],\n          },\n          [overContainer]: {\n            $splice: [[newIndex, 0, active.id]],\n            //$splice: [[newIndex, 0, allDataIds[activeContainer][activeIndex]],\n          },\n        })\n      );\n    },\n    [allDataIds]\n  );\n\n  /**\n   * Custom collision detection strategy optimized for multiple columnIds\n   *\n   * - First, find any droppable columnIds intersecting with the pointer.\n   * - If there are none, find intersecting columnIds with the active draggable.\n   * - If there are no intersecting columnIds, return the last matched intersection\n   *\n   */\n  const collisionDetectionStrategy = useCallback(\n    (args) => {\n      if (activeId && activeId in allDataIds) {\n        return closestCenter({\n          ...args,\n          droppableContainers: args.droppableContainers.filter(\n            (container) => container.id in allDataIds\n          ),\n        });\n      }\n\n      // Start by finding any intersecting droppable\n      const pointerIntersections = pointerWithin(args);\n      const intersections =\n        pointerIntersections.length > 0\n          ? // If there are droppables intersecting with the pointer, return those\n            pointerIntersections\n          : rectIntersection(args);\n      let overId = getFirstCollision(intersections, \"id\");\n\n      if (overId !== null) {\n        if (overId in allDataIds) {\n          const containerItems = allDataIds[overId];\n\n          // If a container is matched and it contains allDataIds (columns 'A', 'B', 'C')\n          if (containerItems.length > 0) {\n            // Return the closest droppable within that container\n            overId = closestCenter({\n              ...args,\n              droppableContainers: args.droppableContainers.filter(\n                (container) =>\n                  container.id !== overId &&\n                  containerItems.includes(container.id)\n              ),\n            })[0]?.id;\n          }\n        }\n\n        lastOverId.current = overId;\n\n        return [{ id: overId }];\n      }\n\n      // When a draggable item moves to a new container, the layout may shift\n      // and the `overId` may become `null`. We manually set the cached `lastOverId`\n      // to the id of the draggable item that was moved to the new container, otherwise\n      // the previous `overId` will be returned which can cause allDataIds to incorrectly shift positions\n      if (recentlyMovedToNewContainer.current) {\n        lastOverId.current = activeId;\n      }\n\n      // If no droppable is matched, return the last match\n      return lastOverId.current ? [{ id: lastOverId.current }] : [];\n    },\n    [activeId, allDataIds]\n  );\n\n  const [clonedItems, setClonedItems] = useState(null);\n  const sensors = useSensors(\n    useSensor(MouseSensor, {\n      activationConstraint: {\n        //distance: 5,\n        delay: 100,\n        tolerance: 5,\n      },\n    }),\n    useSensor(TouchSensor, {\n      activationConstraint: {\n        distance: 5,\n        delay: 100,\n        tolerance: 5,\n      },\n    }),\n    useSensor(KeyboardSensor, {\n      KeyboardSensor: {\n        distance: 5,\n        delay: 100,\n        tolerance: 5,\n      },\n    })\n  );\n\n  const findContainer = (id) => {\n    if (id in allDataIds) return id;\n    return columnIds.find((key) => allDataIds[key].includes(id));\n  };\n\n  function handleDragStart({ active }) {\n    setActiveId(active.id);\n    setClonedItems(allDataIds);\n  }\n\n  function handleDragOver({ active, over }) {\n    const overId = over?.id;\n\n    if (!overId || active.id in allDataIds) return;\n\n    const overContainer = findContainer(overId);\n    const activeContainer = findContainer(active.id);\n\n    if (!overContainer || !activeContainer) return;\n\n    if (activeContainer !== overContainer) {\n      moveBetweenContainers(\n        activeContainer,\n        overContainer,\n        active,\n        over,\n        overId\n      );\n    }\n  }\n\n  function handleDragEnd({ active, over }) {\n    if (!over) {\n      setActiveId(null);\n      return;\n    }\n\n    if (active.id in allDataIds && over?.id) {\n      setColumnIds((columnIds) => {\n        const activeIndex = columnIds.indexOf(active.id);\n        const overIndex = columnIds.indexOf(over.id);\n\n        return arrayMove(columnIds, activeIndex, overIndex);\n      });\n    }\n\n    const activeContainer = findContainer(active.id);\n\n    if (!activeContainer) {\n      setActiveId(null);\n      return;\n    }\n\n    const overContainer = findContainer(over.id);\n\n    if (overContainer) {\n      const activeIndex = allDataIds[activeContainer].indexOf(active.id);\n      const overIndex = allDataIds[overContainer].indexOf(over.id);\n\n      if (activeIndex !== overIndex) {\n        setAllDataIds((items) => ({\n          ...items,\n          [overContainer]: arrayMove(\n            items[overContainer],\n            activeIndex,\n            overIndex\n          ),\n        }));\n      }\n    }\n\n    setActiveId(null);\n  }\n\n  const handleDragCancel = () => {\n    if (clonedItems) {\n      // Reset allDataIds to their original state in case allDataIds have been\n      // Dragged across columnIds\n      setAllDataIds(clonedItems);\n    }\n\n    setActiveId(null);\n    setClonedItems(null);\n  };\n\n  useEffect(() => {\n    requestAnimationFrame(() => {\n      recentlyMovedToNewContainer.current = false;\n    });\n  }, [allDataIds]);\n\n  const onAddSectionClick = () => {};\n\n  return (\n    <div className={styles.kanban}>\n      <DndContext\n        sensors={sensors}\n        collisionDetection={collisionDetectionStrategy}\n        measuring={{\n          droppable: {\n            strategy: MeasuringStrategy.WhileDragging,\n          },\n        }}\n        onDragStart={handleDragStart}\n        onDragOver={handleDragOver}\n        onDragEnd={handleDragEnd}\n        onDragCancel={handleDragCancel}\n      >\n        <div className={styles.kanbanContainer}>\n          <SortableContext\n            items={columnIds}\n            strategy={horizontalListSortingStrategy}\n          >\n            {columnIds.map((containerId) => {\n              return (\n                <SectionItem\n                  id={containerId}\n                  key={containerId}\n                  allDataIds={allDataIds[containerId]}\n                  name={\n                    columns.filter((c) => \"column-\" + c.id === containerId)[0]\n                      .name\n                  }\n                  taskList={taskList}\n                  isSortingContainer={isSortingContainer}\n                />\n              );\n            })}\n          </SortableContext>\n          {isCreateSection ? (\n            <CreateSpace\n              placeholder=\"Enter section name\"\n              onClose={setIsCreateSection}\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n              className={styles.createSection}\n            />\n          ) : (\n            <div\n              className={styles.addSection}\n              onClick={() => setIsCreateSection(true)}\n            >\n              Add Section\n            </div>\n          )}\n        </div>\n        <ClientOnlyPortal selector=\".kanban\">\n          <DragOverlay>\n            {activeId ? (\n              columnIds.includes(activeId) ? (\n                <SectionItem\n                  id={activeId}\n                  allDataIds={allDataIds[activeId]}\n                  name={\n                    columns.filter((c) => \"column-\" + c.id === activeId)[0].name\n                  }\n                  taskList={taskList}\n                  dragOverlay\n                />\n              ) : (\n                <FieldItem\n                  id={activeId}\n                  item={taskList.filter((d) => \"task-\" + d.id === activeId)[0]}\n                  dragOverlay\n                />\n              )\n            ) : null}\n          </DragOverlay>\n        </ClientOnlyPortal>\n      </DndContext>\n    </div>\n  );\n};\n","export const tasks = [\n  {\n    id: 1,\n    col_id: 1,\n    name: \"Remove unused tests\",\n    priority_id: 1,\n    following: true,\n    assignees_ids: [],\n  },\n  {\n    id: 2,\n    col_id: 2,\n    name: \"Integrate Ant Design\",\n    priority_id: 2,\n    assignees_ids: [1],\n  },\n  {\n    id: 3,\n    col_id: 2,\n    name: \"Fix typo in config\",\n    priority_id: 3,\n    assignees_ids: [2],\n  },\n];\n\nexport const columns = [\n  { id: 1, name: \"Backlog\", order: 1 },\n  { id: 2, name: \"To-Do\", order: 2 },\n  { id: 3, name: \"In progress\", order: 3 },\n];\n","import React, { useEffect, useState } from \"react\";\n\nimport { Helmet } from \"react-helmet\";\n\nimport { SpaceHeader } from \"./space_header\";\nimport { BoardHeader } from \"./board_header\";\nimport { ScrollToTop } from \"../../common/scroll_to_top_init\";\n\nimport { DndBoard } from \"./dnd_board\";\nimport { columns, tasks } from \"./dnd_board/FakeData\";\n\nexport default function Connect() {\n  useEffect(() => {}, []);\n\n  ScrollToTop();\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>add title here</title>\n        <meta name=\"description\" content=\"\" />\n        <meta name=\"keywords\" content=\"\" />\n      </Helmet>\n\n      <SpaceHeader />\n      <BoardHeader />\n      <DndBoard tasks={tasks} columns={columns} />\n    </React.Fragment>\n  );\n}\n"],"names":["ScrollToTop","useEffect","window","scrollTo","CreateSpace","_ref","onClose","onFinish","isLoading","onFinishFailed","className","placeholder","uniqueId","uuidv4","formRef","useRef","_jsx","concat","styles","children","_jsxs","Form","name","id","ref","initialValues","remember","autoComplete","Item","rules","required","type","Input","Button","loading","htmlType","_Fragment","onClick","RxCross2","spaceTabsData","isActive","Tabs","isCreateSpace","setIsCreateSpace","useState","map","tab","values","errorInfo","BsPlus","SpaceHeader","src","logo","alt","IoIosLogOut","onLogout","boardTabs","BoardTabs","isCreateBoard","setIsCreateBoard","CreateBoard","BoardHeader","SlArrowDown","ClientOnlyPortal","selector","mounted","setMounted","current","document","querySelector","createPortal","FieldItem","props","item","dragOverlay","setNodeRef","listeners","isDragging","transform","transition","attributes","useSortable","disabled","data","style","CSS","Translate","toString","opacity","boxShadow","border","cursor","touchAction","PointerEvent","navigator","MaxTouchPoints","msMaxTouchPoints","CreateTask","setIsCreateTask","message","TextArea","SectionItem","allDataIds","taskList","isSortingContainer","setActivatorNodeRef","isCreateTask","height","getElementsByClassName","clientHeight","RxDragHandleDots2","length","SortableContext","items","strategy","verticalListSortingStrategy","_index","filter","d","RiApps2AddLine","DndBoard","tasks","columns","isCreateSection","setIsCreateSection","setTaskList","setAllDataIds","columnIds","setColumnIds","activeId","setActiveId","lastOverId","recentlyMovedToNewContainer","includes","cols","sort","a","b","order","forEach","col_id","push","Object","keys","moveBetweenContainers","useCallback","activeContainer","overContainer","active","over","overId","activeItems","overItems","overIndex","indexOf","activeIndex","newIndex","_active$rect","_active$rect$current","_active$rect2","_active$rect2$current","_over$rect","_over$rect2","isBelowOverItem","rect","translated","top","update","$splice","collisionDetectionStrategy","args","closestCenter","droppableContainers","container","pointerIntersections","pointerWithin","intersections","rectIntersection","getFirstCollision","containerItems","_closestCenter$","clonedItems","setClonedItems","sensors","useSensors","useSensor","MouseSensor","activationConstraint","delay","tolerance","TouchSensor","distance","KeyboardSensor","findContainer","find","key","requestAnimationFrame","DndContext","collisionDetection","measuring","droppable","MeasuringStrategy","WhileDragging","onDragStart","_ref2","onDragOver","_ref3","onDragEnd","_ref4","arrayMove","onDragCancel","handleDragCancel","horizontalListSortingStrategy","containerId","c","DragOverlay","priority_id","following","assignees_ids","Connect","React","Helmet","content"],"sourceRoot":""}